generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  extensions        = [pgvector(map: "vector", schema: "extensions")]
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refreshToken       String? @db.Text
  accessToken        String? @db.Text
  expires_at         Int?
  tokenType          String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  files         File[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model File {
  id            Int                          @id @default(autoincrement())
  name          String
  size          Int?
  type          String?
  url           String?
  extractedText String?
  meanEmbedding Unsupported("vector(1536)")?
  chunks        TextEmbedding[]
  userId        String?
  User          User?                        @relation(fields: [userId], references: [id])
}

model TextEmbedding {
  id        Int                          @id @default(autoincrement())
  text      String                       @unique
  embedding Unsupported("vector(1536)")?
  file      File?                        @relation(fields: [fileId], references: [id])
  fileId    Int?
}
